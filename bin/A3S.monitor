#!/bin/bash
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#   This file is part of the 'AndroidThreeScripts' project                  #
#   Copyright (C) 2014  'theFONZ'                                           #
#                                                                           #
#   This program is free software: you can redistribute it and/or modify    #
#   it under the terms of the GNU General Public License as published by    #
#   the Free Software Foundation, either version 2 of the License, or       #
#   any later version.                                                      #
#                                                                           #
#   This program is distributed in the hope that it will be useful,         #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of          #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                    #
#   See the GNU General Public License for more details.                    #
#                                                                           #
#   You should have received a copy of the GNU General Public license       #
#   along with this program.  If not, see 'license' in project root         #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

A3S_DIR="$( cd $( dirname ${0} )/.. && pwd )"
A3S_CONF_DIR="${A3S_DIR}/config.d"

source ${A3S_CONF_DIR}/A3S-ui.conf  # Import Default Menu UI Variables

printf '\033]0;A3S Monitor\a'
printf '\033[8;22;53t'
clear

function Monitor {
	printf '%s\n' "           ${b}---------------------------------     "
	printf '%s\n' "                 ${w}Usage & Load Monitor"
	printf '%s\n' "           ${b}---------------------------------     "

	# Show CPU Model info
	printf "  ${b}CPU: ${c}"
		grep -m 1 "model name" /proc/cpuinfo | cut -d: -f2 | sed -e 's/^ *//' | sed -e 's/$//'

	# Show CPU Core Count
	printf "  ${b}No. of CPU Cores: ${c}"
		nproc | awk '{ printf $0 }'
	printf '%s\n' ""

	# Show Linux Release Version
	printf "  ${b}Linux Version: ${c}"
		. /etc/lsb-release
		OS=$DISTRIB_DESCRIPTION
		printf "${OS}"

	# Show Linux Kernel Version
	printf '%s\n'"  ${b}Current Kernel: ${c}"
		uname -r | awk '{ printf $0 }'
	printf '%s\n' ""

	# Show Total System Uptime
	printf "  ${b}Total System Uptime: ${c}"
		upSeconds=`cat /proc/uptime`;
		upSeconds=${upSeconds%%.*};
		secs=$((${upSeconds}%60))
		mins=$((${upSeconds}/60%60))
		hours=$((${upSeconds}/3600%24))
		days=$((${upSeconds}/86400))
		totalUptimeSecs="${secs}s"
		totalUptimeMins=""
		totalUptimeHours=""
		totalUptimeDays=""
		if [ "${mins}" -gt "0" ]
			then
			totalUptimeMins="${mins}m "
		fi
		if [ "${hours}" -gt "0" ]
			then
			totalUptimeHours="${hours}h "
		fi
		if [ "${days}" -gt "0" ]
			then
			totalUptimeDays="${days}d "
		fi
		finalUptimeString="${totalUptimeDays}${totalUptimeHours}${totalUptimeMins}${totalUptimeSecs}"
		printf "${finalUptimeString}"
	printf '%s\n' ""
	printf '%s\n' "           ${b}---------------------------------     "

	# Show Total Memory Usage
	printf "  ${b}Memory Usage: ${c}"
		free -m | awk 'NR==2{printf "%s/%s MB (%.2f%)\n", $3,$2,$3*100/$2 }'

	# Show Total Swap Usage
	printf "  ${b}Swap Usage: ${c}"
		free -t -m | grep "Swap" | awk '{printf "%s/%s MB (%.2f%)\n", $3,$4,$3*100/$4 }'

	# Show Total Disk Usage
	printf "  ${b}Disk Usage: ${c}"
		df -h | awk '$NF=="/"{printf "%d/%d GB (%s)\n", $3,$2,$5}'

	# Show Running Processes
	printf "  ${b}Running Processes: ${c}"
		ps axr | wc -l | awk '{print $1}'

	# Show Total Processes
	printf "  ${b}Total Processes: ${c}"
		ps ax | wc -l | awk '{print $1}'

	# Show Top 5 Processes listed using ps -e
	printf '%s\n' "           ${b}---------------------------------     "
	printf '%s\n' "${b} PiD | User    |         Command         | Cpu%|Mem%${c}"
		ps -e -o pid,uname,cmd,pcpu,pmem --sort=-pcpu,-pmem  | tail -n +2 | head -5
}

# Run Monitor function every second to update stats
while true
	do
		Monitor
		sleep 1
		clear && printf '\033c'
done
